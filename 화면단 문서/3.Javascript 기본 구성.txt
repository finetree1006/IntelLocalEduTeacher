3.Javascript 기본 구성.txt


자바랑 왠만한건 동일하다

규칙? :스크립트라고 하면 일단 자바스크립트라고 생각하자

*스크립트 선언 위치
html태그 안이라면 아무곳이나 가능하다

head 태그 내에 위치할 수 있다
/body 뒤에 위치할 수 있다

하지만 head가 일단 기본이다

*변수와 상수
var				최초의 변수타입
let				ECMA 6에서 도입
const			ECMA 6에서 도입

ECMA6에서 변수의 유효 범위가 이전보다 명확해졌습니다.

*자바스크립트 특징
인터프리터 언어이다

객체 기반 언어이다


객체지향   					vs  	객체 기반
비객체지향 프로그램을 짤 수 있다				객체 프로그램
기본 타입 존재							기본 타입 x -> 전부 객체 O


*명명 규칙
카멜? 자바 언어, 백 엔드
파스칼? 클래스, 백 엔드
언더스코어? 화면단, 스타일, db

*변수의 라이프사이클



*let
동일한 변수를 중복해서 선언할 수 없다
블록에서 전역변수처럼 사용할 수 없다
변수값을 변경할 수 있다

*const
상수 선언
var, let은 변경되는 데이터를 선언하는 반면
상수(const)는 변경하지 않을 데이터를 선언한다
나머지는 let의 특징을 가지고 있다.


*DOM(Document Object Model)
문서 객체 모델
웹 페이지의 구조는 html이 모든 태그들을 감싸고 있으며,
그 내부는 다시 각종 설정과 선언으로 이뤄진, head 태그와
body 태그로 나누어 진다

모든 웹 문서는 여러 태그들이 각각의 역할에 따라 구조화되어 있는데
태그들 각각을 객체로 인식하는 개념이다


-id 선택자
-class 선택자
-tag 선택자


*DOM CRUD
태그 관리(manage)

메서드명					설명
createElement		태그를 생성하는 메서드
createTextNode		텍스트를 생성하는 메서드
appendChild			태그를 부모와 자식의 관계로 만들어주는 메서드
					부모 태그.appendChild(자식 태그)
						
removeChild			태그를 제거해 주는 메서드
					부모.removeChild(자식) -> 자식만 지워진다

insertBefore		태그에 새로운 자식을 추가
					부모 태그.insertBefore(새로운 자식, 선택 태그 자식)
					선택 태그 자식 앞에 새로운 자식 태그를 추가
replaceChild		부모 태그의 자식인 선택 태그를 새 태그로 덮어 씌움
					부모.replaceChild(새 태그, 선택 태그)
cloneNode			선택태그.cloneNode(true or false)
					선택태그를 복제하여 true인 경우에는 하위 태그까지 모두 복제		
	
getAttribute		
setAttribute
removeAttribute			















   






